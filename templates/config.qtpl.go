// Code generated by qtc from "config.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/config.qtpl:1
package templates

//line templates/config.qtpl:1
import "fmt"

//line templates/config.qtpl:2
import "strings"

//line templates/config.qtpl:3
import "reflect"

//line templates/config.qtpl:4
import "github.com/theliebeskind/genfig/strategies"

//line templates/config.qtpl:6
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/config.qtpl:6
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/config.qtpl:6
func StreamConfig(qw422016 *qt422016.Writer, env string, config strategies.ParsingResult) {
//line templates/config.qtpl:6
	qw422016.N().S(`
var `)
//line templates/config.qtpl:7
	qw422016.N().S(strings.Title(env))
//line templates/config.qtpl:7
	qw422016.N().S(`Config = Config{`)
//line templates/config.qtpl:8
	for k, v := range config {
//line templates/config.qtpl:8
		qw422016.N().S(`
  `)
//line templates/config.qtpl:9
		streamconfigLine(qw422016, k, v, 1)
//line templates/config.qtpl:9
		qw422016.N().S(`
`)
//line templates/config.qtpl:10
	}
//line templates/config.qtpl:10
	qw422016.N().S(`}
`)
//line templates/config.qtpl:11
}

//line templates/config.qtpl:11
func WriteConfig(qq422016 qtio422016.Writer, env string, config strategies.ParsingResult) {
//line templates/config.qtpl:11
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/config.qtpl:11
	StreamConfig(qw422016, env, config)
//line templates/config.qtpl:11
	qt422016.ReleaseWriter(qw422016)
//line templates/config.qtpl:11
}

//line templates/config.qtpl:11
func Config(env string, config strategies.ParsingResult) string {
//line templates/config.qtpl:11
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/config.qtpl:11
	WriteConfig(qb422016, env, config)
//line templates/config.qtpl:11
	qs422016 := string(qb422016.B)
//line templates/config.qtpl:11
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/config.qtpl:11
	return qs422016
//line templates/config.qtpl:11
}

//line templates/config.qtpl:13
func streamconfigLine(qw422016 *qt422016.Writer, k string, v interface{}, o int) {
//line templates/config.qtpl:14
	qw422016.N().S(strings.Title(k))
//line templates/config.qtpl:14
	qw422016.N().S(`: `)
//line templates/config.qtpl:14
	streamconfigValue(qw422016, v, o)
//line templates/config.qtpl:15
	qw422016.N().S(`,`)
//line templates/config.qtpl:15
}

//line templates/config.qtpl:15
func writeconfigLine(qq422016 qtio422016.Writer, k string, v interface{}, o int) {
//line templates/config.qtpl:15
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/config.qtpl:15
	streamconfigLine(qw422016, k, v, o)
//line templates/config.qtpl:15
	qt422016.ReleaseWriter(qw422016)
//line templates/config.qtpl:15
}

//line templates/config.qtpl:15
func configLine(k string, v interface{}, o int) string {
//line templates/config.qtpl:15
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/config.qtpl:15
	writeconfigLine(qb422016, k, v, o)
//line templates/config.qtpl:15
	qs422016 := string(qb422016.B)
//line templates/config.qtpl:15
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/config.qtpl:15
	return qs422016
//line templates/config.qtpl:15
}

//line templates/config.qtpl:17
func streamconfigValue(qw422016 *qt422016.Writer, v interface{}, o int) {
//line templates/config.qtpl:19
	indent := strings.Repeat("  ", o)
	typStr := reflect.TypeOf(v).String()
	kind := reflect.TypeOf(v).Kind()
	kindStr := kind.String()

//line templates/config.qtpl:23
	if typStr == "string" {
//line templates/config.qtpl:24
		qw422016.N().S(`"`)
//line templates/config.qtpl:24
		qw422016.N().V(v)
//line templates/config.qtpl:25
		qw422016.N().S(`"`)
//line templates/config.qtpl:25
	} else if kindStr == typStr {
//line templates/config.qtpl:26
		qw422016.N().V(v)
//line templates/config.qtpl:27
	} else if kind == reflect.Slice {
//line templates/config.qtpl:28
		qw422016.N().S(fmt.Sprintf("%#v", v))
//line templates/config.qtpl:30
	} else {
//line templates/config.qtpl:30
		qw422016.N().S(`{
`)
//line templates/config.qtpl:32
		if typStr == "map[interface {}]interface {}" {
//line templates/config.qtpl:32
			for k, v := range v.(map[interface{}]interface{}) {
//line templates/config.qtpl:33
				qw422016.N().S(`  `)
//line templates/config.qtpl:33
				qw422016.N().S(indent)
//line templates/config.qtpl:33
				streamconfigLine(qw422016, fmt.Sprintf("%v", k), v, o+1)
//line templates/config.qtpl:33
				qw422016.N().S(`
`)
//line templates/config.qtpl:35
			}
//line templates/config.qtpl:35
		} else {
//line templates/config.qtpl:35
			for k, v := range v.(map[string]interface{}) {
//line templates/config.qtpl:36
				qw422016.N().S(`  `)
//line templates/config.qtpl:36
				qw422016.N().S(indent)
//line templates/config.qtpl:36
				streamconfigLine(qw422016, k, v, o+1)
//line templates/config.qtpl:37
			}
//line templates/config.qtpl:37
		}
//line templates/config.qtpl:37
		qw422016.N().S(indent)
//line templates/config.qtpl:37
		qw422016.N().S(`}`)
//line templates/config.qtpl:38
	}
//line templates/config.qtpl:38
}

//line templates/config.qtpl:38
func writeconfigValue(qq422016 qtio422016.Writer, v interface{}, o int) {
//line templates/config.qtpl:38
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/config.qtpl:38
	streamconfigValue(qw422016, v, o)
//line templates/config.qtpl:38
	qt422016.ReleaseWriter(qw422016)
//line templates/config.qtpl:38
}

//line templates/config.qtpl:38
func configValue(v interface{}, o int) string {
//line templates/config.qtpl:38
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/config.qtpl:38
	writeconfigValue(qb422016, v, o)
//line templates/config.qtpl:38
	qs422016 := string(qb422016.B)
//line templates/config.qtpl:38
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/config.qtpl:38
	return qs422016
//line templates/config.qtpl:38
}
