// Code generated by genfig plugin 'write_to_env'; DO NOT EDIT.

package config

import (
	"encoding/json"
	"fmt"
	"io"
	"os"
)

var (
	_ = os.Setenv
	_ = fmt.Sprintf
	_ = json.Marshal
)

func (c *Config) WriteToEnv() {
	var buf []byte
	_ = buf

	_ = os.Setenv("APIS_GOOGLE_URI", fmt.Sprintf("%v", c.Apis.Google.Uri))

	_ = os.Setenv("DB_PASS", fmt.Sprintf("%v", c.Db.Pass))

	_ = os.Setenv("DB_URI", fmt.Sprintf("%v", c.Db.Uri))

	_ = os.Setenv("DB_USER", fmt.Sprintf("%v", c.Db.User))

	buf, _ = json.Marshal(c.EmptyArray)
	_ = os.Setenv("EMPTYARRAY", string(buf))

	buf, _ = json.Marshal(c.List)
	_ = os.Setenv("LIST", string(buf))

	_ = os.Setenv("LONGDESC_DE", fmt.Sprintf("%v", c.LongDesc.De))

	_ = os.Setenv("LONGDESC_EN", fmt.Sprintf("%v", c.LongDesc.En))

	_ = os.Setenv("PROJECT", fmt.Sprintf("%v", c.Project))

	_ = os.Setenv("RANDOMIZER_THRESHOLD", fmt.Sprintf("%v", c.Randomizer.Threshold))

	buf, _ = json.Marshal(c.Secrets)
	_ = os.Setenv("SECRETS", string(buf))

	_ = os.Setenv("SERVER_HOST", fmt.Sprintf("%v", c.Server.Host))

	_ = os.Setenv("SERVER_PORT", fmt.Sprintf("%v", c.Server.Port))

	_ = os.Setenv("VERSION", fmt.Sprintf("%v", c.Version))

	_ = os.Setenv("WIP", fmt.Sprintf("%v", c.Wip))

}

func (c *Config) PrintDebugEnvs(w io.Writer) {
	var buf []byte
	_ = buf

	fmt.Fprintf(w, "APIS_GOOGLE_URI/apis.google.uri='%v'\n", c.Apis.Google.Uri)

	fmt.Fprintf(w, "DB_PASS/db.pass='%v'\n", c.Db.Pass)

	fmt.Fprintf(w, "DB_URI/db.uri='%v'\n", c.Db.Uri)

	fmt.Fprintf(w, "DB_USER/db.user='%v'\n", c.Db.User)

	buf, _ = json.Marshal(c.EmptyArray)
	fmt.Fprintf(w, "EMPTYARRAY/emptyarray='%v'\n", string(buf))

	buf, _ = json.Marshal(c.List)
	fmt.Fprintf(w, "LIST/list='%v'\n", string(buf))

	fmt.Fprintf(w, "LONGDESC_DE/longdesc.de='%v'\n", c.LongDesc.De)

	fmt.Fprintf(w, "LONGDESC_EN/longdesc.en='%v'\n", c.LongDesc.En)

	fmt.Fprintf(w, "PROJECT/project='%v'\n", c.Project)

	fmt.Fprintf(w, "RANDOMIZER_THRESHOLD/randomizer.threshold='%v'\n", c.Randomizer.Threshold)

	buf, _ = json.Marshal(c.Secrets)
	fmt.Fprintf(w, "SECRETS/secrets='%v'\n", string(buf))

	fmt.Fprintf(w, "SERVER_HOST/server.host='%v'\n", c.Server.Host)

	fmt.Fprintf(w, "SERVER_PORT/server.port='%v'\n", c.Server.Port)

	fmt.Fprintf(w, "VERSION/version='%v'\n", c.Version)

	fmt.Fprintf(w, "WIP/wip='%v'\n", c.Wip)

}
